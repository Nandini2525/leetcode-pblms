class Solution {
    int c=0;
    int m;
    boolean visited[];
    int k;
    List<List<Integer>> l=new ArrayList<>();
    public int findCircleNum(int[][] isConnected) {
        visited=new boolean [isConnected.length];
         m=isConnected[0].length;
        for(int i=0;i<isConnected.length;i++){
            ArrayList<Integer> l1=new ArrayList<>();
            for(int j=0;j<m;j++){
                if(i!=j && isConnected[i][j]==1){
                   l1.add(j);
                }
            }l.add(l1);
        }
        for(int i=0;i<isConnected.length;i++){
            if(!visited[i]){
                c=c+1;
                dfs(i);
            }
        }return c;
        
    }
        public void dfs(int s){
            visited[s]=true;
            for(int i:l.get(s)){
                if(!visited[i]){
                    dfs(i);
                }
            }
            }   
}
