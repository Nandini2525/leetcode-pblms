class Solution {
    public TreeNode del(TreeNode root){
        if(root.left==null){
            return root.right;
        }
        if(root.right==null){
            return root.left;
        }
        if(root.left!=null && root.right!=null){
            TreeNode t=root.right;
            TreeNode n=rightmost(root.left);
            n.right=t;
        }
    return root.left;
    }
        public TreeNode rightmost(TreeNode root){
            while(root.right!=null){
                    root=root.right;
                }
                return root;
        }
    public TreeNode deleteNode(TreeNode root, int key) {
        TreeNode temp=root;
        if(root==null){
            return root;
        }
        if(root.val == key)
        {
            return del(root);
        }
        while(root != null){
            if(key < root.val){
                if(root.left != null && root.left.val == key)
                {
                    root.left=del(root.left);
                }
                else
                {
                    root=root.left;
                }
            }

            else{
                if(root.right != null && root.right.val == key){

                    root.right=del(root.right);
                }else
                {
                    root=root.right;
                }
            }
        }  
    return temp;
    }
}
